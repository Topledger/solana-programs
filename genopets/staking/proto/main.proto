syntax = "proto2";

package sf.solana.block_meta.v1;

message PbChangeTotalGeneAllocatedLayout {
  required uint64 newTotalGeneAllocated = 1;
}

message PbChangePoolWeightLayout {
  required uint32 newPoolWeight = 1;
}

message PbCreateGlobalStateLayout {
  required uint64 startTime = 1;
  required uint64 epochTime = 2;
  required uint64 endTime = 3;
  required double decayFactorPerEpoch = 4;
  required uint64 totalGeneAllocated = 5;
  optional uint64 timeFactor = 6;
}

message PbCreateStakingPoolLayout {
  required uint64 earliestUnlockDate = 1;
  required uint32 poolWeight = 2;
  required uint32 weightPerToken = 3;
  required bool governanceEligible = 4;
}

message PbStakeLayout {
  required uint64 amount = 1;
  required uint32 lockForMonths = 2;
  required bool asSgene = 3;
}

message PbReLockDepositLayout {
  required uint32 newLockForMonths = 1;
  required bool asSgene = 2;
}

message PbWithdrawLayout {
  required bool asSgene = 1;
}

message PbClaimRewardsLayout {
  required bool asSgene = 1;
}

message Arg {
  required string instruction_type = 1;
  optional PbChangeTotalGeneAllocatedLayout changeTotalGeneAllocated = 2;
  optional PbChangePoolWeightLayout changePoolWeight = 3;
  optional PbCreateGlobalStateLayout createGlobalState = 4;
  optional PbCreateStakingPoolLayout createStakingPool = 5;
  optional PbStakeLayout stake = 6;
  optional PbReLockDepositLayout reLockDeposit = 7;
  optional PbWithdrawLayout withdraw = 8;
  optional PbClaimRewardsLayout claimRewards = 9;
}

message InputAccounts {
  optional string authority = 1;
  optional string newAuthority = 2;
  optional string stakeMaster = 3;
  optional string stakingPool = 4;
  optional string sgeneMinter = 5;
  optional string geneRewarder = 6;
  optional string mintSgene = 7;
  optional string geneMint = 8;
  optional string ataGeneRewarder = 9;
  optional string associatedTokenProgram = 10;
  optional string systemProgram = 11;
  optional string tokenProgram = 12;
  optional string rent = 13;
  optional string poolToken = 14;
  optional string user = 15;
  optional string staker = 16;
  optional string ataUser = 17;
  optional string ataUserSgene = 18;
  optional string ataVault = 19;
  optional string userDeposit = 20;
  optional string userReDeposit = 21;
  optional string deposit = 22;
}

message Meta {
  required string block_date = 1;
  required int64 block_time = 2;
  required string tx_id = 3;
  required string dapp = 4;
  required uint64 block_slot = 5;
  required uint32 instruction_index = 7;
  required bool is_inner_instruction = 8;
  required uint32 inner_instruction_index = 9;
  required string instruction_type = 10;
  required Arg args = 11;
  required InputAccounts input_accounts = 12;
}

message Output {
  repeated Meta data = 1;
}