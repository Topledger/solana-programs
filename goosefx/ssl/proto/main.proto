syntax = "proto2";

package sf.solana.block_meta.v1;

message PbDepositLayout {
  required uint64 amount = 1;
}

message PbWithdrawLayout {
  required uint64 withdrawPercent = 1;
}

message PbMintPtLayout {
  required uint64 amountToMint = 1;
}

message PbBurnPtLayout {
  required uint64 amountToBurn = 1;
}

message PbSwapLayout {
  required uint64 amountIn = 1;
  required uint64 minOut = 2;
}

message Arg {
  required string instruction_type = 1;
  optional PbDepositLayout deposit = 2;
  optional PbWithdrawLayout withdraw = 3;
  optional PbMintPtLayout mintPt = 4;
  optional PbBurnPtLayout burnPt = 5;
  optional PbSwapLayout swap = 6;
}

message InputAccounts {
  optional string controller = 1;
  optional string ssl = 2;
  optional string liquidityAccount = 3;
  optional string userWallet = 4;
  optional string systemProgram = 5;
  optional string rent = 6;
  optional string rtVault = 7;
  optional string userRtAta = 8;
  optional string tokenProgram = 9;
  optional string ptMint = 10;
  optional string userPtAta = 11;
  optional string pair = 12;
  optional string sslIn = 13;
  optional string sslOut = 14;
  optional string liabilityVaultIn = 15;
  optional string swappedLiabilityVaultIn = 16;
  optional string liabilityVaultOut = 17;
  optional string swappedLiabilityVaultOut = 18;
  optional string userInAta = 19;
  optional string userOutAta = 20;
  optional string feeCollectorAta = 21;
  optional string feeCollector = 22;
  optional string accounts = 23;
}

message Meta {
  required string block_date = 1;
  required int64 block_time = 2;
  required string tx_id = 3;
  required string dapp = 4;
  required uint64 block_slot = 5;
  required uint32 instruction_index = 7;
  required bool is_inner_instruction = 8;
  required uint32 inner_instruction_index = 9;
  required string instruction_type = 10;
  required Arg args = 11;
  required InputAccounts input_accounts = 12;
}

message Output {
  repeated Meta data = 1;
}