syntax = "proto2";

package sf.solana.block_meta.v1;

message PbWithdrawParamsLayout {
  required uint64 withdrawAmount = 1;
  required string withdrawal = 2;
}

message PbOpenDcaLayout {
  required uint64 applicationIdx = 1;
  required uint64 inAmount = 2;
  required uint64 inAmountPerCycle = 3;
  required double cycleFrequency = 4;
  optional uint64 minPrice = 5;
  optional uint64 maxPrice = 6;
  optional double startAt = 7;
  optional bool closeWsolInAta = 8;
}

message PbWithdrawLayout {
  required PbWithdrawParamsLayout withdrawParams = 1;
}

message PbDepositLayout {
  required uint64 depositIn = 1;
}

message PbWithdrawFeesLayout {
  required uint64 amount = 1;
}

message PbFulfillFlashFillLayout {
  required uint64 repayAmount = 1;
}

message PbOpenDcaV2Layout {
  required uint64 applicationIdx = 1;
  required uint64 inAmount = 2;
  required uint64 inAmountPerCycle = 3;
  required double cycleFrequency = 4;
  optional uint64 minOutAmount = 5;
  optional uint64 maxOutAmount = 6;
  optional double startAt = 7;
}

message PbFulfillDlmmFillLayout {
  required uint64 repayAmount = 1;
}

message Arg {
  required string instruction_type = 1;
  optional PbOpenDcaLayout openDca = 2;
  optional PbWithdrawLayout withdraw = 3;
  optional PbDepositLayout deposit = 4;
  optional PbWithdrawFeesLayout withdrawFees = 5;
  optional PbFulfillFlashFillLayout fulfillFlashFill = 6;
  optional PbOpenDcaV2Layout openDcaV2 = 7;
  optional PbFulfillDlmmFillLayout fulfillDlmmFill = 8;
}

message InputAccounts {
  optional string dca = 1;
  optional string user = 2;
  optional string inputMint = 3;
  optional string outputMint = 4;
  optional string userAta = 5;
  optional string inAta = 6;
  optional string outAta = 7;
  optional string systemProgram = 8;
  optional string tokenProgram = 9;
  optional string associatedTokenProgram = 10;
  optional string eventAuthority = 11;
  optional string program = 12;
  optional string userInAta = 13;
  optional string userOutAta = 14;
  optional string dcaAta = 15;
  optional string admin = 16;
  optional string mint = 17;
  optional string feeAuthority = 18;
  optional string programFeeAta = 19;
  optional string adminFeeAta = 20;
  optional string keeper = 21;
  optional string keeperInAta = 22;
  optional string instructionsSysvar = 23;
  optional string feeAta = 24;
  optional string dcaOutAta = 25;
  optional string intermediateAccount = 26;
  optional string initUserOutAta = 27;
  optional string payer = 28;
}

message Meta {
  required string block_date = 1;
  required int64 block_time = 2;
  required string tx_id = 3;
  required string dapp = 4;
  required uint64 block_slot = 5;
  required uint32 instruction_index = 7;
  required bool is_inner_instruction = 8;
  required uint32 inner_instruction_index = 9;
  required string instruction_type = 10;
  required Arg args = 11;
  required InputAccounts input_accounts = 12;
}

message Output {
  repeated Meta data = 1;
}