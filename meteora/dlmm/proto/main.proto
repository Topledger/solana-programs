syntax = "proto3";

package sf.solana.meteora_dlmm.v1;

// Main instructions container
message Output {
  repeated Meta data = 1;
}

// Metadata for an instruction
message Meta {
  string tx_id = 1;
  uint64 block_slot = 2;
  int64 block_time = 3;
  string block_date = 4;
  optional uint32 instruction_index = 5;
  optional bool is_inner_instruction = 6;
  optional uint32 inner_instruction_index = 7;
  optional string signer = 8;
  optional string outer_program = 9;
  string instruction_type = 10;
  // Map of account roles to their addresses, key is role name, value is account address
  map<string, string> input_accounts = 14;

  // Instruction data
  optional InstructionArgs args = 12;
}

// Flattened args for easy querying
message FlatArg {
  optional int32 tick_spacing = 1;
  optional int32 index = 2;
  optional uint64 trade_fee_rate = 3;
  optional uint64 protocol_fee_rate = 4;
  optional uint64 fund_fee_rate = 5;
  optional uint32 param = 6;
  optional uint64 value = 7;
  optional string sqrt_price_x64 = 8;
  optional uint64 open_time = 9;
  optional uint32 status = 10;
  repeated string keys = 11;
  optional string new_owner = 12;
  repeated PbInitializeRewardParam params = 13;
  optional uint32 reward_index = 14;
  optional string emissions_per_second_x64 = 15;
  optional uint64 end_time = 16;
  optional string amount0_requested = 17;
  optional string amount1_requested = 18;
  optional int32 tick_lower_index = 19;
  optional int32 tick_upper_index = 20;
  optional int32 tick_array_lower_start_index = 21;
  optional int32 tick_array_upper_start_index = 22;
  optional string liquidity = 23;
  optional uint64 amount0_max = 24;
  optional uint64 amount1_max = 25;
  optional uint64 with_metadata = 26;
  optional string liquidity_amount = 27;
  optional uint64 amount0_min = 28;
  optional uint64 amount1_min = 29;
  optional bool is_base_input = 30;
  optional uint64 amount_specified = 31;
  optional uint64 amount_limit = 32;
  optional uint64 sqrt_price_limit_x64 = 33;
  optional bool is_base_input_v2 = 34;
  optional uint64 amount_specified_v2 = 35;
  optional uint64 other_amount_threshold = 36;
  optional uint64 sqrt_price_limit_x64_v2 = 37;
}

// Main instruction arguments structure
message InstructionArgs {
  oneof instruction_args {
    // Core pool operations
    PbCreatePoolLayout create_pool = 1;
    PbInitializeTickArrayLayout initialize_tick_array = 2;
    PbCreatePositionLayout create_position = 3;
    PbClosePositionLayout close_position = 4;
    PbSwapLayout swap = 5;
    PbSwapRouterBaseInLayout swap_router_base_in = 6;
    PbInitializeRewardLayout initialize_reward = 7;
    PbSetRewardEmissionsLayout set_reward_emissions = 8;
    PbClaimRewardLayout claim_reward = 9;
    PbClaimFeesLayout claim_fees = 10;
    PbTransferPositionOwnerLayout transfer_position_owner = 11;
    PbUpdateFeesLayout update_fees = 12;
    PbAddLiquidityLayout add_liquidity = 13; // Used for legacy AddLiquidity
    PbRemoveLiquidityLayout remove_liquidity = 14; // Used for legacy RemoveLiquidity
    PbInitializeConfigLayout initialize_config = 15;
    PbUpdateConfigLayout update_config = 16;
    
    // Additional Meteora-specific instruction layouts
    PbInitializeLbPairLayout initialize_lb_pair = 17;
    PbInitializePermissionLbPairLayout initialize_permission_lb_pair = 18;
    PbInitializePositionLayout initialize_position = 19;
    PbInitializePositionPdaLayout initialize_position_pda = 20;
    PbSwapWithPriceImpactLayout swap_with_price_impact = 21;
    PbSwapExactOutLayout swap_exact_out = 22;
    
    // Add other instruction layouts
    PbInitializeCustomizablePermissionlessLbPairLayout initialize_customizable_permissionless_lb_pair = 23;
    PbCloseLbPairLayout close_lb_pair = 24;
    PbInitializeBinArrayLayout initialize_bin_array = 25;
    PbInitializeBinArrayBitmapExtensionLayout initialize_bin_array_bitmap_extension = 26;
    PbAddLiquidityByWeightLayout add_liquidity_by_weight = 27;
    PbAddLiquidityByStrategyLayout add_liquidity_by_strategy = 28;
    PbAddLiquidityOneSideLayout add_liquidity_one_side = 29;
    PbAddLiquidityByStrategyOneSideLayout add_liquidity_by_strategy_one_side = 30;
    PbAddLiquidityOneSidePreciseLayout add_liquidity_one_side_precise = 31;
    PbRemoveAllLiquidityLayout remove_all_liquidity = 33;
    PbRemoveLiquidityByRangeLayout remove_liquidity_by_range = 34;
    PbRemoveLiquiditySingleSideLayout remove_liquidity_single_side = 35;
    PbGoToABinLayout go_to_a_bin = 36;
    PbInitializePositionByOperatorLayout initialize_position_by_operator = 37;
    PbUpdatePositionOperatorLayout update_position_operator = 38;
    PbClaimLiquidityLayout claim_liquidity = 39;
    PbWithdrawProtocolFeeLayout withdraw_protocol_fee = 40;
    PbUpdateFeeParametersLayout update_fee_parameters = 41;
    PbUpdateFeeOwnerLayout update_fee_owner = 42;
    PbFundRewardLayout fund_reward = 43;
    PbUpdateRewardFunderLayout update_reward_funder = 44;
    PbUpdateRewardDurationLayout update_reward_duration = 45;
    PbWithdrawIneligibleRewardLayout withdraw_ineligible_reward = 46;
    PbClosePresetParameterLayout close_preset_parameter = 47;
    PbInitializePresetParameterLayout initialize_preset_parameter = 48;
    PbInitializePresetParameterV2Layout initialize_preset_parameter_v2 = 49;
    PbTogglePairStatusLayout toggle_pair_status = 50;
    PbUpdateWhitelistedWalletLayout update_whitelisted_wallet = 51;
    PbIncreaseOracleLengthLayout increase_oracle_length = 52;
    PbMigratePositionLayout migrate_position = 53;
    PbMigrateBinArrayLayout migrate_bin_array = 54;
    PbUpdateFeesAndRewardsLayout update_fees_and_rewards = 55;
    PbSetLockReleaseSlotLayout set_lock_release_slot = 56;
    PbSetActivationSlotLayout set_activation_slot = 57;
    PbSetMaxSwappedAmountLayout set_max_swapped_amount = 58;
    PbSetPreActivationDurationLayout set_pre_activation_duration = 59;
    PbSetPreActivationSwapAddressLayout set_pre_activation_swap_address = 60;
    PbIdlWriteLayout idl_write = 61;

    // Event logs - Use the wrapper now
    PbEventLogWrapper event_log = 100; 

    // V2 Instructions
    PbInitializeLbPair2Layout initialize_lb_pair2 = 101;
    PbClaimFee2Layout claim_fee2 = 102;
    // Add other V2 layouts here as they are implemented
    PbInitializeCustomizablePermissionlessLbPair2Layout initialize_customizable_permissionless_lb_pair2 = 103;
    PbAddLiquidity2Layout add_liquidity2 = 104;
    PbAddLiquidityByStrategy2Layout add_liquidity_by_strategy2 = 105;
    PbAddLiquidityOneSidePrecise2Layout add_liquidity_one_side_precise2 = 106;
    PbAddLiquidityByStrategyOneSide2Layout add_liquidity_by_strategy_one_side2 = 107;
    PbRemoveLiquidity2Layout remove_liquidity2 = 108;
    PbRemoveLiquidityByRange2Layout remove_liquidity_by_range2 = 109;
    PbSwap2Layout swap2 = 110;
    PbSwapExactOut2Layout swap_exact_out2 = 111;
    PbSwapWithPriceImpact2Layout swap_with_price_impact2 = 112;
    PbClosePosition2Layout close_position2 = 113;
    PbUpdateFeesAndReward2Layout update_fees_and_reward2 = 114; // Maps to UpdateFeesAndRewards in enum
    PbClosePositionIfEmptyLayout close_position_if_empty = 115;
    PbInitializeTokenBadgeLayout initialize_token_badge = 116; // No args, but keep for completeness
    PbCreateClaimProtocolFeeOperatorLayout create_claim_protocol_fee_operator = 117; // No args
    PbCloseClaimProtocolFeeOperatorLayout close_claim_protocol_fee_operator = 118; // No args
    PbSetActivationPointLayout set_activation_point = 119;
    PbClaimReward2Layout claim_reward2 = 120;
  }
}

// Common types
message PbPubKey {
  string pubkey = 1;
}

message PbInt128 {
  string value = 1;
}

// Instruction specific layouts
message PbInitializeRewardParam {
  string mint = 1;
  string vault = 2;
  string authority = 3;
  string emissions_per_second_x64 = 4;
  uint64 open_time = 5;
  uint64 end_time = 6;
}

// New message for InitPermissionPairIx struct (Based on user example)
message PbInitPermissionPairIx {
  optional int32 active_id = 1; // i32
  optional uint32 bin_step = 2; // u16 -> u32
  optional uint32 base_factor = 3; // u16 -> u32
  optional int32 min_bin_id = 4; // i32 
  optional int32 max_bin_id = 5; // i32
  optional uint64 lock_duration = 6; // u64
  optional uint32 activation_type = 7; // u8 -> u32
  // base_fee_power_factor removed
  // protocol_share removed
}

// Meteora DLMM specific layouts
message PbCreatePoolLayout {
  string token_mint_a = 1;
  string token_mint_b = 2;
  int32 tick_spacing = 3;
  string initial_sqrt_price_x64 = 4;
}

message PbInitializeTickArrayLayout {
  int32 start_tick_index = 1;
}

message PbCreatePositionLayout {
  int32 tick_lower_index = 1;
  int32 tick_upper_index = 2;
  string liquidity_amount = 3;
  uint64 token_max_a = 4;
  uint64 token_max_b = 5;
}

message PbClosePositionLayout {}

message PbSwapLayout {
  optional string amount_in = 1 [json_name = "amountIn"];
  optional string min_amount_out = 2 [json_name = "minAmountOut"];
}

message PbSwapRouterBaseInLayout {
  uint64 amount_in = 1;
  uint64 amount_out_min = 2;
  uint64 sqrt_price_limit_x64 = 3;
}

message PbInitializeRewardLayout {
  optional uint64 reward_index = 1;
  optional uint64 reward_duration = 2;
  optional string funder = 3; // publicKey mapped to string
}

message PbSetRewardEmissionsLayout {
  uint32 reward_index = 1;
  string emissions_per_second_x64 = 2;
  uint64 open_time = 3;
  uint64 end_time = 4;
}

message PbClaimRewardLayout {
  optional uint64 reward_index = 1;
}

message PbClaimFeesLayout {}

message PbTransferPositionOwnerLayout {
  string new_owner = 1;
}

message PbUpdateFeesLayout {
  uint64 trade_fee_rate = 1;
  uint64 protocol_fee_rate = 2;
}

message PbAddLiquidityLayout {
  optional PbLiquidityParameter liquidity_parameter = 1;
}

message PbRemoveLiquidityLayout {
  repeated PbBinLiquidityReduction bin_liquidity_removal = 1;
}

message PbInitializeConfigLayout {
  uint64 trade_fee_rate = 1;
  uint64 protocol_fee_rate = 2;
  uint64 tick_spacing = 3;
}

message PbUpdateConfigLayout {
  optional uint32 param = 1;
  optional uint64 value = 2;
}

// Parameters for InitializeCustomizablePermissionlessLbPair (Corrected)
message PbInitializeCustomizablePermissionlessLbPairLayout {
  optional PbCustomizableParams params = 1;
}

// Create nested structure for InitializeLbPair args
// message PbInitLbPairIx {
//   optional int32 active_id = 1;
//   optional uint32 bin_step = 2; 
// }

message PbInitializeLbPairLayout {
  // Use direct fields instead of nested structure
  // optional PbInitLbPairIx ix_data = 1;
  optional int32 active_id = 1;
  optional uint32 bin_step = 2; // Represents Int16ul
}

message PbInitializePermissionLbPairLayout {
  // Changed to hold the nested struct
  optional PbInitPermissionPairIx ix_data = 1;
  // active_id and bin_step removed from here
}

message PbInitializePositionLayout {
  optional int32 lower_bin_id = 1;
  optional int32 width = 2;
}

message PbInitializePositionPdaLayout {
  optional int32 lower_bin_id = 1;
  optional int32 width = 2;
}

message PbSwapWithPriceImpactLayout {
  optional uint64 amount_in = 1;
  optional int32 active_id = 2;
  optional int32 max_price_impact_bps = 3;
}

message PbSwapExactOutLayout {
  optional uint64 max_in_amount = 1;
  optional uint64 out_amount = 2;
}

// Helper messages for liquidity parameters
message PbLiquidityParameterLayout {
  // Fields for general liquidity, maybe amountX/Y?
  // Define based on Rust usage for other instructions like AddLiquidityByWeight if needed.
}

// Specific layout for BinLiquidityDistributionByWeight
message PbBinLiquidityDistributionByWeightLayout {
  optional int32 bin_id = 1;
  optional uint32 weight = 2; // u16 in IDL -> uint32
}

// Corresponds to LiquidityParameterByWeight struct in IDL
message PbLiquidityParameterByWeight {
  optional uint64 amount_x = 1;
  optional uint64 amount_y = 2;
  optional int32 active_id = 3;
  optional int32 max_active_bin_slippage = 4;
  repeated PbBinLiquidityDistributionByWeightLayout bin_liquidity_dist = 5;
}

// Removed PbLiquidityOneSideParameterLayout as it's being flattened

// Helper message for Fee Parameters (Flattened into PbUpdateFeeParametersLayout)
// Removed PbFeeParameterLayout

// Placeholder definitions for missing layouts with fields added
message PbCloseLbPairLayout {}
message PbInitializeBinArrayLayout { 
  optional int64 index = 1;
}
message PbInitializeBinArrayBitmapExtensionLayout {}
message PbAddLiquidityByWeightLayout { 
  optional PbLiquidityParameterByWeight liquidity_parameter = 1;
}
message PbAddLiquidityByStrategyLayout { 
  optional PbLiquidityParameterByStrategy liquidity_parameter = 1;
}
message PbAddLiquidityOneSideLayout { 
  // Fields moved directly here from the removed PbLiquidityOneSideParameterLayout
  optional uint64 amount = 1;
  optional int32 active_id = 2;
  optional int32 max_active_bin_slippage = 3;
  repeated PbBinLiquidityDistributionByWeightLayout bin_liquidity_dist = 4;
}
message PbAddLiquidityByStrategyOneSideLayout { 
  optional PbLiquidityParameterByStrategyOneSide liquidity_parameter = 1;
}
message PbAddLiquidityOneSidePreciseLayout { 
  // Fields moved from Python's AddLiquidityOneSidePreciseParameterLayout
  repeated PbCompressedBinDepositAmountLayout bins = 1;
  optional uint64 decompress_multiplier = 2;
}
message PbRemoveAllLiquidityLayout {}
message PbRemoveLiquidityByRangeLayout { 
  optional int32 from_bin_id = 1;
  optional int32 to_bin_id = 2;
  optional int32 bps_to_remove = 3; // Assuming i16 maps to int32
}
message PbRemoveLiquiditySingleSideLayout {}
message PbGoToABinLayout { 
  optional int32 bin_id = 1;
}
message PbInitializePositionByOperatorLayout { 
  optional int32 lower_bin_id = 1;
  optional int32 width = 2;
  optional string owner = 3; 
}
message PbUpdatePositionOperatorLayout { 
  optional string operator = 1;
}
message PbClaimLiquidityLayout {}
message PbWithdrawProtocolFeeLayout { 
  optional uint64 amount_x = 1;
  optional uint64 amount_y = 2;
  optional PbRemainingAccountsInfo remaining_accounts_info = 3;
}
message PbUpdateFeeParametersLayout { 
  // Use the nested structure
  optional PbFeeParameterLayout fee_parameter = 1;
}
message PbUpdateFeeOwnerLayout {}
message PbFundRewardLayout { 
  optional int64 reward_index = 1;
  optional int64 amount = 2;
  optional bool carry_forward = 3;
}
message PbUpdateRewardFunderLayout { 
  optional int64 reward_index = 1;
  optional string new_funder = 2;
}
message PbUpdateRewardDurationLayout { 
  optional int64 reward_index = 1;
  optional int64 new_duration = 2;
}
message PbWithdrawIneligibleRewardLayout { 
  optional int64 reward_index = 1;
}
message PbClosePresetParameterLayout {}
// Add new message for ClosePresetParameter2
message PbClosePresetParameter2Layout {}

// Flattened structure for InitializePresetParameter
message PbInitializePresetParameterLayout { 
  // Fields moved from PbInitializePresetParameterIxLayout
  // Based on InitPresetParametersIx in IDL
  optional uint32 bin_step = 1; // u16 in IDL -> u32
  optional uint32 base_factor = 2; // u16 in IDL -> u32
  optional uint32 filter_period = 3; // u16 in IDL -> u32
  optional uint32 decay_period = 4; // u16 in IDL -> u32
  optional uint32 reduction_factor = 5; // u16 in IDL -> u32
  optional uint32 variable_fee_control = 6; // u32 in IDL
  optional uint32 max_volatility_accumulator = 7; // u32 in IDL
  optional int32 min_bin_id = 8; // i32 in IDL
  optional int32 max_bin_id = 9; // i32 in IDL
  optional uint32 protocol_share = 10; // u16 in IDL -> u32
}
// Removed PbInitializePresetParameterIxLayout

// Flattened structure for InitializePresetParameterV2
message PbInitializePresetParameterV2Layout { 
  // Fields moved from PbInitializePresetParameterV2IxLayout
  // Based on InitPresetParameters2Ix in IDL
  optional uint32 index = 1; // u16 in IDL -> u32 
  optional uint32 bin_step = 2; // u16 in IDL -> u32
  optional uint32 base_factor = 3; // u16 in IDL -> u32
  optional uint32 filter_period = 4; // u16 in IDL -> u32
  optional uint32 decay_period = 5; // u16 in IDL -> u32
  optional uint32 reduction_factor = 6; // u16 in IDL -> u32
  optional uint32 variable_fee_control = 7; // u32 in IDL
  optional uint32 max_volatility_accumulator = 8; // u32 in IDL
  optional uint32 protocol_share = 9; // u16 in IDL -> u32
  optional uint32 base_fee_power_factor = 10; // u8 in IDL -> u32
  // host_fee removed as it wasn't in IDL struct
}
// Removed PbInitializePresetParameterV2IxLayout

// Renamed from SetPairStatusLayout/SetPairStatusPermissionlessLayout 
message PbTogglePairStatusLayout {
  // Removed status field as args should be empty
  // optional uint32 status = 1; // u8 in IDL -> u32
}
message PbUpdateWhitelistedWalletLayout { 
  optional int32 idx = 1; // Assuming u16 maps to int32
  optional string wallet = 2;
}
message PbIncreaseOracleLengthLayout { 
  optional int64 length_to_add = 1; // Assuming u32 maps to int64 (check Rust type)
}
message PbMigratePositionLayout {}
message PbMigrateBinArrayLayout {}
message PbUpdateFeesAndRewardsLayout {}
message PbSetLockReleaseSlotLayout { 
  optional uint64 new_lock_release_slot = 1;
}
message PbSetActivationSlotLayout { 
  optional uint64 activation_slot = 1;
}
message PbSetMaxSwappedAmountLayout { 
  optional uint64 swap_cap_deactivate_slot = 1; // Changed to uint64
  optional uint64 max_swapped_amount = 2; // Changed to uint64
}
message PbSetPreActivationDurationLayout { 
  optional uint64 pre_activation_duration = 1; // Changed to uint64
}
message PbSetPreActivationSwapAddressLayout { 
  optional string pre_activation_swap_address = 1;
}
message PbIdlWriteLayout {}

// New layout for SetActivationPoint
message PbSetActivationPointLayout {
  optional uint64 activation_point = 1; // u64 in IDL
}

// New layout for ClaimReward2
message PbClaimReward2Layout {
  optional uint64 reward_index = 1; // u64 in IDL
  optional int32 min_bin_id = 2; // i32 in IDL
  optional int32 max_bin_id = 3; // i32 in IDL
  optional PbRemainingAccountsInfo remaining_accounts_info = 4;
}

// --- Event Log Structures ---

// Renamed from PbSwapLogLayout, removed event_name, added optional
message PbSwapLogFields {
  string lb_pair = 1; 
  string from = 2; 
  optional int32 start_bin_id = 3;
  optional int32 end_bin_id = 4;
  optional uint64 amount_in = 5;
  optional uint64 amount_out = 6;
  optional bool swap_for_y = 7;
  optional uint64 fee = 8;
  optional uint64 protocol_fee = 9;
  string fee_bps = 10; 
  optional uint64 host_fee = 11;
}

message PbCompositionFeeLogFields {
  string from = 1;
  optional int32 bin_id = 2;
  optional uint64 token_x_fee_amount = 3;
  optional uint64 token_y_fee_amount = 4;
  optional uint64 protocol_token_x_fee_amount = 5;
  optional uint64 protocol_token_y_fee_amount = 6;
}

message PbAddLiquidityLogFields {
  string lb_pair = 1;
  string from = 2;
  string position = 3;
  repeated uint64 amounts = 4;
  optional int32 active_bin_id = 5;
}

message PbRemoveLiquidityLogFields {
  string lb_pair = 1;
  string from = 2;
  string position = 3;
  repeated uint64 amounts = 4;
  optional int32 active_bin_id = 5;
}

message PbClaimRewardLogFields {
  string lb_pair = 1;
  string position = 2;
  string owner = 3;
  optional int64 reward_index = 4;
  optional int64 total_reward = 5;
}

message PbFundRewardLogFields {
  string lb_pair = 1;
  string funder = 2;
  optional int64 reward_index = 3;
  optional int64 amount = 4;
}

message PbInitializeRewardLogFields {
  string lb_pair = 1;
  string reward_mint = 2;
  string funder = 3;
  optional int64 reward_index = 4;
  optional int64 reward_duration = 5;
}

message PbUpdateRewardDurationLogFields {
  string lb_pair = 1;
  optional int64 reward_index = 2;
  optional int64 old_reward_duration = 3;
  optional int64 new_reward_duration = 4;
}

message PbUpdateRewardFunderLogFields {
  string lb_pair = 1;
  optional int64 reward_index = 2;
  string old_funder = 3;
  string new_funder = 4;
}

message PbPositionCloseLogFields {
  string position = 1;
  string owner = 2;
}

message PbClaimFeeLogFields {
  string lb_pair = 1;
  string position = 2;
  string owner = 3;
  optional int64 fee_x = 4;
  optional int64 fee_y = 5;
}

message PbLbPairCreateLogFields {
  string lb_pair = 1;
  optional int32 bin_step = 2;
  string token_x = 3;
  string token_y = 4;
}

message PbPositionCreateLogFields {
  string lb_pair = 1;
  string position = 2;
  string owner = 3;
}

message PbFeeParameterUpdateLogFields {
  string lb_pair = 1;
  optional uint32 protocol_share = 2;
  optional uint32 base_factor = 3;
}

message PbIncreaseObservationLogFields {
  string oracle = 1;
  optional int64 new_observation_length = 2;
}

message PbWithdrawIneligibleRewardLogFields {
  string lb_pair = 1;
  string reward_mint = 2;
  optional int64 amount = 3;
}

message PbUpdatePositionOperatorLogFields {
  string position = 1;
  string old_operator = 2;
  string new_operator = 3;
}

message PbUpdatePositionLockReleaseSlotLogFields {
  string position = 1;
  optional int64 current_slot = 2;
  optional int64 new_lock_release_slot = 3;
  optional int64 old_lock_release_slot = 4;
  string sender = 5;
}

message PbGoToABinLogFields {
  string lb_pair = 1;
  optional int32 from_bin_id = 2;
  optional int32 to_bin_id = 3;
}

message PbUpdatePositionLockReleasePointLogFields {
  string position = 1;
  optional int64 current_point = 2;
  optional int64 new_lock_release_point = 3;
  optional int64 old_lock_release_point = 4;
  string sender = 5;
}

message PbUnknownEvent1LogFields {
  string vault = 1;
  string escrow = 2;
  string owner = 3;
  optional int64 amount = 4;
  optional int64 vault_total_claimed_token = 5;
}

// New event message types for the recently added events
message PbIncreasePositionLengthLogFields {
  string position = 1;
  optional uint64 new_length = 2;
}

message PbDecreasePositionLengthLogFields {
  string position = 1;
  optional uint64 new_length = 2;
}

message PbDynamicFeeParameterUpdateLogFields {
  string lb_pair = 1;
  optional uint32 filter_period = 2;
  optional uint32 decay_period = 3;
  optional uint32 reduction_factor = 4;
  optional uint32 variable_fee_control = 5;
  optional uint32 max_volatility_accumulator = 6;
}

// Wrapper for all event types
message PbEventLogWrapper {
  string event_name = 1;
  oneof event_fields {
    PbSwapLogFields swap_log_fields = 2;
    PbCompositionFeeLogFields composition_fee_log_fields = 3;
    PbAddLiquidityLogFields add_liquidity_log_fields = 4;
    PbRemoveLiquidityLogFields remove_liquidity_log_fields = 5;
    PbClaimRewardLogFields claim_reward_log_fields = 6;
    PbFundRewardLogFields fund_reward_log_fields = 7;
    PbInitializeRewardLogFields initialize_reward_log_fields = 8;
    PbUpdateRewardDurationLogFields update_reward_duration_log_fields = 9;
    PbUpdateRewardFunderLogFields update_reward_funder_log_fields = 10;
    PbPositionCloseLogFields position_close_log_fields = 11;
    PbClaimFeeLogFields claim_fee_log_fields = 12;
    PbLbPairCreateLogFields lb_pair_create_log_fields = 13;
    PbPositionCreateLogFields position_create_log_fields = 14;
    PbFeeParameterUpdateLogFields fee_parameter_update_log_fields = 15;
    PbIncreaseObservationLogFields increase_observation_log_fields = 16;
    PbWithdrawIneligibleRewardLogFields withdraw_ineligible_reward_log_fields = 17;
    PbUpdatePositionOperatorLogFields update_position_operator_log_fields = 18;
    PbUpdatePositionLockReleaseSlotLogFields update_position_lock_release_slot_log_fields = 19;
    PbGoToABinLogFields go_to_a_bin_log_fields = 20;
    PbUpdatePositionLockReleasePointLogFields update_position_lock_release_point_log_fields = 21;
    PbUnknownEvent1LogFields unknown_event1_log_fields = 22;
    PbIncreasePositionLengthLogFields increase_position_length_log_fields = 23;
    PbDecreasePositionLengthLogFields decrease_position_length_log_fields = 24;
    PbDynamicFeeParameterUpdateLogFields dynamic_fee_parameter_update_log_fields = 25;
  }
}

// --- End Event Log Structures --- 

// --- V2 Instruction Argument Layouts ---

message PbInitializeLbPair2Layout {
  optional int32 active_id = 1;
  repeated uint32 padding = 2; // [u8; 96] in IDL
}

message PbClaimFee2Layout {
  optional int32 min_bin_id = 1;
  optional int32 max_bin_id = 2;
  optional PbRemainingAccountsInfo remaining_accounts_info = 3;
}

message PbInitializeCustomizablePermissionlessLbPair2Layout {
  optional PbCustomizableParams params = 1;
}

message PbAddLiquidity2Layout {
  optional PbLiquidityParameter liquidity_parameter = 1;
  optional PbRemainingAccountsInfo remaining_accounts_info = 2;
}

message PbAddLiquidityByStrategy2Layout {
  optional PbLiquidityParameterByStrategy liquidity_parameter = 1;
  optional PbRemainingAccountsInfo remaining_accounts_info = 2;
}

message PbAddLiquidityOneSidePrecise2Layout {
  optional PbAddLiquiditySingleSidePreciseParameter2 liquidity_parameter = 1;
  optional PbRemainingAccountsInfo remaining_accounts_info = 2;
}

message PbAddLiquidityByStrategyOneSide2Layout {
  // Corrected AGAIN back to the specific type for this instruction
  optional PbLiquidityParameterByStrategyOneSide liquidity_parameter = 1;
  optional PbRemainingAccountsInfo remaining_accounts_info = 2;
}

message PbRemoveLiquidity2Layout {
  repeated PbBinLiquidityReduction bin_liquidity_removal = 1;
  optional PbRemainingAccountsInfo remaining_accounts_info = 2;
}

message PbRemoveLiquidityByRange2Layout {
  optional int32 from_bin_id = 1;
  optional int32 to_bin_id = 2;
  optional uint32 bps_to_remove = 3; // u16 in IDL
  optional PbRemainingAccountsInfo remaining_accounts_info = 4;
}

message PbSwap2Layout {
  optional uint64 amount_in = 1;
  optional uint64 min_amount_out = 2;
  optional PbRemainingAccountsInfo remaining_accounts_info = 3;
}

message PbSwapExactOut2Layout {
  optional uint64 max_in_amount = 1;
  optional uint64 out_amount = 2;
  optional PbRemainingAccountsInfo remaining_accounts_info = 3;
}

message PbSwapWithPriceImpact2Layout {
  optional uint64 amount_in = 1;
  optional int32 active_id = 2; // This field is Option<i32> in IDL
  optional uint32 max_price_impact_bps = 3; // u16 in IDL
  optional PbRemainingAccountsInfo remaining_accounts_info = 4;
}

message PbClosePosition2Layout {
  // No arguments
}

message PbUpdateFeesAndReward2Layout { // Maps to updateFeesAndReward2 in IDL
  optional int32 min_bin_id = 1;
  optional int32 max_bin_id = 2;
}

message PbClosePositionIfEmptyLayout {
  // No arguments
}

message PbInitializeTokenBadgeLayout {
  // No arguments
}

message PbCreateClaimProtocolFeeOperatorLayout {
  // No arguments
}

message PbCloseClaimProtocolFeeOperatorLayout {
  // No arguments
}

// --- Helper Types for V2 Instructions ---

// Corresponds to AccountsType enum in IDL
enum PbAccountsType {
  TRANSFER_HOOK_X = 0;
  TRANSFER_HOOK_Y = 1;
  TRANSFER_HOOK_REWARD = 2;
}

// Corresponds to RemainingAccountsSlice struct in IDL
message PbRemainingAccountsSlice {
  optional PbAccountsType accounts_type = 1;
  optional uint32 length = 2; // u8 in IDL
}

// Corresponds to RemainingAccountsInfo struct in IDL
message PbRemainingAccountsInfo {
  repeated PbRemainingAccountsSlice slices = 1;
}

// Corresponds to CustomizableParams struct in IDL
message PbCustomizableParams {
  optional int32 active_id = 1;
  optional uint32 bin_step = 2; // u16 in IDL
  optional uint32 base_factor = 3; // u16 in IDL
  optional uint32 activation_type = 4; // u8 in IDL
  optional bool has_alpha_vault = 5;
  optional uint64 activation_point = 6; // Option<u64> in IDL
  optional bool creator_pool_on_off_control = 7;
  optional uint32 base_fee_power_factor = 8; // u8 in IDL
  // Renamed padding_numeric to padding for final JSON output
  repeated uint32 padding = 10; // [u8; 62] in IDL represented as numeric array
}

// Corresponds to LiquidityParameter struct in IDL
message PbLiquidityParameter {
  optional uint64 amount_x = 1;
  optional uint64 amount_y = 2;
  repeated PbBinLiquidityDistribution bin_liquidity_dist = 3;
}

// Corresponds to BinLiquidityDistribution struct in IDL
message PbBinLiquidityDistribution {
  optional int32 bin_id = 1;
  optional uint32 distribution_x = 2; // u16 in IDL
  optional uint32 distribution_y = 3; // u16 in IDL
}

// Corresponds to LiquidityParameterByStrategy struct in IDL
message PbLiquidityParameterByStrategy {
  optional uint64 amount_x = 1;
  optional uint64 amount_y = 2;
  optional int32 active_id = 3;
  optional int32 max_active_bin_slippage = 4;
  optional PbStrategyParameters strategy_parameters = 5;
}

// Corresponds to StrategyParameters struct in IDL
message PbStrategyParameters {
  optional int32 min_bin_id = 1;
  optional int32 max_bin_id = 2;
  optional PbStrategyType strategy_type = 3;
  repeated uint32 parameters = 4; // Field for numeric array representation
}

// Corresponds to StrategyType enum in IDL
enum PbStrategyType {
  SPOT_ONE_SIDE = 0;
  CURVE_ONE_SIDE = 1;
  BID_ASK_ONE_SIDE = 2;
  SPOT_BALANCED = 3;
  CURVE_BALANCED = 4;
  BID_ASK_BALANCED = 5;
  SPOT_IMBALANCED = 6; // Note: IDL uses 'ImBalanced'
  CURVE_IMBALANCED = 7; // Note: IDL uses 'ImBalanced'
  BID_ASK_IMBALANCED = 8; // Note: IDL uses 'ImBalanced'
}

// Corresponds to AddLiquiditySingleSidePreciseParameter2 struct in IDL
message PbAddLiquiditySingleSidePreciseParameter2 {
  repeated PbCompressedBinDepositAmountLayout bins = 1; // Use Layout name
  optional uint64 decompress_multiplier = 2;
  optional uint64 max_amount = 3;
}

// Corresponds to CompressedBinDepositAmount struct in IDL (Use Layout name)
message PbCompressedBinDepositAmountLayout { // Keep Layout name
  int32 bin_id = 1; // Assuming i32 in Rust
  string amount_total = 2; // u128 -> string
}

// New message definition based on cStruct("binId" / Int32sl, "bpsToRemove" / Int16ul)
message PbBinLiquidityReduction {
  int32 bin_id = 1;
  uint32 bps_to_remove = 2; // Protobuf uses uint32 for u16
}

message PbLiquidityParameterByStrategyOneSide {
  optional uint64 amount = 1;
  optional int32 active_id = 2;
  optional int32 max_active_bin_slippage = 3;
  optional PbStrategyParameters strategy_parameters = 4;
}

// Nested structure for fee parameters
message PbFeeParameterLayout {
  optional uint32 protocol_share = 1; // Represents Int16ul
  optional uint32 base_factor = 2; // Represents Int16ul
} 