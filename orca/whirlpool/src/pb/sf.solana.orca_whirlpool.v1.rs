// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbPubKey {
    /// Solana public key (32 bytes)
    #[prost(bytes = "vec", optional, tag = "1")]
    pub pub_key: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbBumps {
    #[prost(uint32, optional, tag = "1")]
    pub whirlpool_bump: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbOpenPositionBumps {
    #[prost(uint32, optional, tag = "1")]
    pub position_bump: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbOpenPositionWithMetadataBumps {
    #[prost(uint32, optional, tag = "1")]
    pub position_bump: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "2")]
    pub metadata_bump: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbRemainingAccountsSlice {
    #[prost(enumeration = "PbAccountsType", optional, tag = "1")]
    pub accounts_type: ::core::option::Option<i32>,
    /// Corresponds to Int8ul
    #[prost(uint32, optional, tag = "2")]
    pub length: ::core::option::Option<u32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbRemainingAccountsInfo {
    /// Represents Vector.get(RemainingAccountsSliceLayout)
    #[prost(message, repeated, tag = "1")]
    pub slices: ::prost::alloc::vec::Vec<PbRemainingAccountsSlice>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbInitializeConfigLayout {
    #[prost(message, optional, tag = "1")]
    pub fee_authority: ::core::option::Option<PbPubKey>,
    #[prost(message, optional, tag = "2")]
    pub collect_protocol_fees_authority: ::core::option::Option<PbPubKey>,
    #[prost(message, optional, tag = "3")]
    pub reward_emissions_super_authority: ::core::option::Option<PbPubKey>,
    /// Int16ul
    #[prost(uint32, optional, tag = "4")]
    pub default_protocol_fee_rate: ::core::option::Option<u32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbInitializePoolLayout {
    #[prost(message, optional, tag = "1")]
    pub bumps: ::core::option::Option<PbBumps>,
    /// Int16ul
    #[prost(uint32, optional, tag = "2")]
    pub tick_spacing: ::core::option::Option<u32>,
    /// Use the new PbUint128 type for initial_sqrt_price
    #[prost(message, optional, tag = "3")]
    pub initial_sqrt_price: ::core::option::Option<PbUint128>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeTickArrayLayout {
    /// Int32sl
    #[prost(int32, optional, tag = "1")]
    pub start_tick_index: ::core::option::Option<i32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeFeeTierLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub tick_spacing: ::core::option::Option<u32>,
    /// Int16ul
    #[prost(uint32, optional, tag = "2")]
    pub default_fee_rate: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeRewardLayout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSetRewardEmissionsLayout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
    /// Use the new PbUint128 type for emissions_per_second_x64
    #[prost(message, optional, tag = "2")]
    pub emissions_per_second_x64: ::core::option::Option<PbUint128>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbOpenPositionLayout {
    #[prost(message, optional, tag = "1")]
    pub open_position_bumps: ::core::option::Option<PbOpenPositionBumps>,
    /// Int32sl
    #[prost(int32, optional, tag = "2")]
    pub tick_lower_index: ::core::option::Option<i32>,
    /// Int32sl
    #[prost(int32, optional, tag = "3")]
    pub tick_upper_index: ::core::option::Option<i32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbOpenPositionWithMetadataLayout {
    #[prost(message, optional, tag = "1")]
    pub open_position_with_metadata_bumps: ::core::option::Option<
        PbOpenPositionWithMetadataBumps,
    >,
    /// Int32sl
    #[prost(int32, optional, tag = "2")]
    pub tick_lower_index: ::core::option::Option<i32>,
    /// Int32sl
    #[prost(int32, optional, tag = "3")]
    pub tick_upper_index: ::core::option::Option<i32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbIncreaseLiquidityLayout {
    /// Use the new PbUint128 type for liquidity_amount
    #[prost(message, optional, tag = "1")]
    pub liquidity_amount: ::core::option::Option<PbUint128>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub token_max_a: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "3")]
    pub token_max_b: ::core::option::Option<u64>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbDecreaseLiquidityLayout {
    /// Use the new PbUint128 type for liquidity_amount
    #[prost(message, optional, tag = "1")]
    pub liquidity_amount: ::core::option::Option<PbUint128>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub token_min_a: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "3")]
    pub token_min_b: ::core::option::Option<u64>,
}
/// Empty message for instructions with no args
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbUpdateFeesAndRewardsLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCollectFeesLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCollectProtocolFeesLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbClosePositionLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetFeeAuthorityLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetCollectProtocolFeesAuthorityLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetRewardEmissionsSuperAuthorityLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializePositionBundleLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializePositionBundleWithMetadataLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbDeletePositionBundleLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeConfigExtensionLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetConfigExtensionAuthorityLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetTokenBadgeAuthorityLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeTokenBadgeLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbDeleteTokenBadgeLayout {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbOpenPositionWithTokenExtensionsLayout {
    /// Int32sl
    #[prost(int32, optional, tag = "1")]
    pub tick_lower_index: ::core::option::Option<i32>,
    /// Int32sl
    #[prost(int32, optional, tag = "2")]
    pub tick_upper_index: ::core::option::Option<i32>,
    /// Flag
    #[prost(bool, optional, tag = "3")]
    pub with_token_metadata_extension: ::core::option::Option<bool>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCollectRewardLayout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
}
/// Modify the PbUint128 message to be just a string
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbUint128 {
    /// String representation of the u128 value
    #[prost(string, optional, tag = "1")]
    pub value: ::core::option::Option<::prost::alloc::string::String>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSwapLayout {
    /// Int64ul
    #[prost(uint64, optional, tag = "1")]
    pub amount: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub other_amount_threshold: ::core::option::Option<u64>,
    /// Use the new PbUint128 type instead of raw bytes
    #[prost(message, optional, tag = "3")]
    pub sqrt_price_limit: ::core::option::Option<PbUint128>,
    /// Flag
    #[prost(bool, optional, tag = "4")]
    pub amount_specified_is_input: ::core::option::Option<bool>,
    /// Flag
    #[prost(bool, optional, tag = "5")]
    pub a_to_b: ::core::option::Option<bool>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetDefaultFeeRateLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub default_fee_rate: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetDefaultProtocolFeeRateLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub default_protocol_fee_rate: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetFeeRateLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub fee_rate: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetProtocolFeeRateLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub protocol_fee_rate: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetRewardAuthorityLayout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSetRewardAuthorityBySuperAuthorityLayout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbTwoHopSwapLayout {
    /// Int64ul
    #[prost(uint64, optional, tag = "1")]
    pub amount: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub other_amount_threshold: ::core::option::Option<u64>,
    /// Flag
    #[prost(bool, optional, tag = "3")]
    pub amount_specified_is_input: ::core::option::Option<bool>,
    /// Flag
    #[prost(bool, optional, tag = "4")]
    pub a_to_b_one: ::core::option::Option<bool>,
    /// Flag
    #[prost(bool, optional, tag = "5")]
    pub a_to_b_two: ::core::option::Option<bool>,
    /// Use the new PbUint128 type for sqrt_price_limit_one
    #[prost(message, optional, tag = "6")]
    pub sqrt_price_limit_one: ::core::option::Option<PbUint128>,
    /// Use the new PbUint128 type for sqrt_price_limit_two
    #[prost(message, optional, tag = "7")]
    pub sqrt_price_limit_two: ::core::option::Option<PbUint128>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbOpenBundledPositionLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub bundle_index: ::core::option::Option<u32>,
    /// Int32sl
    #[prost(int32, optional, tag = "2")]
    pub tick_lower_index: ::core::option::Option<i32>,
    /// Int32sl
    #[prost(int32, optional, tag = "3")]
    pub tick_upper_index: ::core::option::Option<i32>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCloseBundledPositionLayout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub bundle_index: ::core::option::Option<u32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbCollectFeesV2Layout {
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "1")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbCollectProtocolFeesV2Layout {
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "1")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbCollectRewardV2Layout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "2")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbDecreaseLiquidityV2Layout {
    /// Use the new PbUint128 type for liquidity_amount
    #[prost(message, optional, tag = "1")]
    pub liquidity_amount: ::core::option::Option<PbUint128>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub token_min_a: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "3")]
    pub token_min_b: ::core::option::Option<u64>,
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "4")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbIncreaseLiquidityV2Layout {
    /// Use the new PbUint128 type for liquidity_amount
    #[prost(message, optional, tag = "1")]
    pub liquidity_amount: ::core::option::Option<PbUint128>,
    #[prost(uint64, optional, tag = "2")]
    pub token_max_a: ::core::option::Option<u64>,
    #[prost(uint64, optional, tag = "3")]
    pub token_max_b: ::core::option::Option<u64>,
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "4")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbInitializePoolV2Layout {
    /// Int16ul
    #[prost(uint32, optional, tag = "1")]
    pub tick_spacing: ::core::option::Option<u32>,
    /// Use the new PbUint128 type for initial_sqrt_price
    #[prost(message, optional, tag = "2")]
    pub initial_sqrt_price: ::core::option::Option<PbUint128>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeRewardV2Layout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSetRewardEmissionsV2Layout {
    /// Int8ul
    #[prost(uint32, optional, tag = "1")]
    pub reward_index: ::core::option::Option<u32>,
    /// Use the new PbUint128 type for emissions_per_second_x64
    #[prost(message, optional, tag = "2")]
    pub emissions_per_second_x64: ::core::option::Option<PbUint128>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSwapV2Layout {
    /// Int64ul
    #[prost(uint64, optional, tag = "1")]
    pub amount: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub other_amount_threshold: ::core::option::Option<u64>,
    /// Use the new PbUint128 type instead of raw bytes
    #[prost(message, optional, tag = "3")]
    pub sqrt_price_limit: ::core::option::Option<PbUint128>,
    /// Flag
    #[prost(bool, optional, tag = "4")]
    pub amount_specified_is_input: ::core::option::Option<bool>,
    /// Flag
    #[prost(bool, optional, tag = "5")]
    pub a_to_b: ::core::option::Option<bool>,
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "6")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbTwoHopSwapV2Layout {
    /// Int64ul
    #[prost(uint64, optional, tag = "1")]
    pub amount: ::core::option::Option<u64>,
    /// Int64ul
    #[prost(uint64, optional, tag = "2")]
    pub other_amount_threshold: ::core::option::Option<u64>,
    /// Flag
    #[prost(bool, optional, tag = "3")]
    pub amount_specified_is_input: ::core::option::Option<bool>,
    /// Flag
    #[prost(bool, optional, tag = "4")]
    pub a_to_b_one: ::core::option::Option<bool>,
    /// Flag
    #[prost(bool, optional, tag = "5")]
    pub a_to_b_two: ::core::option::Option<bool>,
    /// Use the new PbUint128 type for sqrt_price_limit_one
    #[prost(message, optional, tag = "6")]
    pub sqrt_price_limit_one: ::core::option::Option<PbUint128>,
    /// Use the new PbUint128 type for sqrt_price_limit_two
    #[prost(message, optional, tag = "7")]
    pub sqrt_price_limit_two: ::core::option::Option<PbUint128>,
    /// Represents AvailableOptional.get(RemainingAccountsInfoLayout)
    #[prost(message, optional, tag = "8")]
    pub remaining_accounts_info: ::core::option::Option<PbRemainingAccountsInfo>,
}
/// --- Flattened Arg Message ---
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FlatArg {
    /// optional string instruction_type = 1; // Field removed
    #[prost(string, optional, tag = "2")]
    pub amount: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "3")]
    pub other_amount_threshold: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(bool, optional, tag = "4")]
    pub amount_specified_is_input: ::core::option::Option<bool>,
    /// Swap specific
    ///
    /// Flattened PbUint128
    #[prost(string, optional, tag = "5")]
    pub sqrt_price_limit: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(bool, optional, tag = "6")]
    pub a_to_b: ::core::option::Option<bool>,
    /// TwoHop specific
    #[prost(bool, optional, tag = "7")]
    pub a_to_b_one: ::core::option::Option<bool>,
    #[prost(bool, optional, tag = "8")]
    pub a_to_b_two: ::core::option::Option<bool>,
    /// Flattened PbUint128
    #[prost(string, optional, tag = "9")]
    pub sqrt_price_limit_one: ::core::option::Option<::prost::alloc::string::String>,
    /// Flattened PbUint128
    #[prost(string, optional, tag = "10")]
    pub sqrt_price_limit_two: ::core::option::Option<::prost::alloc::string::String>,
    /// Liquidity specific
    ///
    /// Flattened PbUint128
    #[prost(string, optional, tag = "11")]
    pub liquidity_amount: ::core::option::Option<::prost::alloc::string::String>,
    /// Use string for u64
    #[prost(string, optional, tag = "12")]
    pub token_max_a: ::core::option::Option<::prost::alloc::string::String>,
    /// Use string for u64
    #[prost(string, optional, tag = "13")]
    pub token_max_b: ::core::option::Option<::prost::alloc::string::String>,
    /// Use string for u64
    #[prost(string, optional, tag = "14")]
    pub token_min_a: ::core::option::Option<::prost::alloc::string::String>,
    /// Use string for u64
    #[prost(string, optional, tag = "15")]
    pub token_min_b: ::core::option::Option<::prost::alloc::string::String>,
    /// Reward specific
    #[prost(uint32, optional, tag = "16")]
    pub reward_index: ::core::option::Option<u32>,
    /// Flattened PbUint128
    #[prost(string, optional, tag = "17")]
    pub emissions_per_second_x64: ::core::option::Option<::prost::alloc::string::String>,
    /// Tick related
    #[prost(int32, optional, tag = "18")]
    pub tick_lower_index: ::core::option::Option<i32>,
    #[prost(int32, optional, tag = "19")]
    pub tick_upper_index: ::core::option::Option<i32>,
    #[prost(int32, optional, tag = "20")]
    pub start_tick_index: ::core::option::Option<i32>,
    /// Fee related
    #[prost(uint32, optional, tag = "21")]
    pub default_fee_rate: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "22")]
    pub default_protocol_fee_rate: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "23")]
    pub fee_rate: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "24")]
    pub protocol_fee_rate: ::core::option::Option<u32>,
    /// Bundle related
    #[prost(uint32, optional, tag = "25")]
    pub bundle_index: ::core::option::Option<u32>,
    /// Config related
    /// Note: Bump/Authority fields usually not needed in flattened args
    #[prost(bool, optional, tag = "26")]
    pub with_token_metadata_extension: ::core::option::Option<bool>,
    /// Added missing field
    #[prost(uint32, optional, tag = "27")]
    pub tick_spacing: ::core::option::Option<u32>,
}
/// --- Aggregated Arg Message ---
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Arg {
    /// String representation of the instruction type (e.g., "InitializeConfig")
    #[prost(string, required, tag = "1")]
    pub instruction_type: ::prost::alloc::string::String,
    #[prost(
        oneof = "arg::InstructionArgs",
        tags = "2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50"
    )]
    pub instruction_args: ::core::option::Option<arg::InstructionArgs>,
}
/// Nested message and enum types in `Arg`.
pub mod arg {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum InstructionArgs {
        #[prost(message, tag = "2")]
        InitializeConfig(super::PbInitializeConfigLayout),
        #[prost(message, tag = "3")]
        InitializePool(super::PbInitializePoolLayout),
        #[prost(message, tag = "4")]
        InitializeTickArray(super::PbInitializeTickArrayLayout),
        #[prost(message, tag = "5")]
        InitializeFeeTier(super::PbInitializeFeeTierLayout),
        #[prost(message, tag = "6")]
        InitializeReward(super::PbInitializeRewardLayout),
        #[prost(message, tag = "7")]
        SetRewardEmissions(super::PbSetRewardEmissionsLayout),
        #[prost(message, tag = "8")]
        OpenPosition(super::PbOpenPositionLayout),
        #[prost(message, tag = "9")]
        OpenPositionWithMetadata(super::PbOpenPositionWithMetadataLayout),
        #[prost(message, tag = "10")]
        IncreaseLiquidity(super::PbIncreaseLiquidityLayout),
        #[prost(message, tag = "11")]
        DecreaseLiquidity(super::PbDecreaseLiquidityLayout),
        #[prost(message, tag = "12")]
        UpdateFeesAndRewards(super::PbUpdateFeesAndRewardsLayout),
        #[prost(message, tag = "13")]
        CollectFees(super::PbCollectFeesLayout),
        #[prost(message, tag = "14")]
        CollectReward(super::PbCollectRewardLayout),
        #[prost(message, tag = "15")]
        CollectProtocolFees(super::PbCollectProtocolFeesLayout),
        #[prost(message, tag = "16")]
        Swap(super::PbSwapLayout),
        #[prost(message, tag = "17")]
        ClosePosition(super::PbClosePositionLayout),
        #[prost(message, tag = "18")]
        SetDefaultFeeRate(super::PbSetDefaultFeeRateLayout),
        #[prost(message, tag = "19")]
        SetDefaultProtocolFeeRate(super::PbSetDefaultProtocolFeeRateLayout),
        #[prost(message, tag = "20")]
        SetFeeRate(super::PbSetFeeRateLayout),
        #[prost(message, tag = "21")]
        SetProtocolFeeRate(super::PbSetProtocolFeeRateLayout),
        #[prost(message, tag = "22")]
        SetFeeAuthority(super::PbSetFeeAuthorityLayout),
        #[prost(message, tag = "23")]
        SetCollectProtocolFeesAuthority(super::PbSetCollectProtocolFeesAuthorityLayout),
        #[prost(message, tag = "24")]
        SetRewardAuthority(super::PbSetRewardAuthorityLayout),
        #[prost(message, tag = "25")]
        SetRewardAuthorityBySuperAuthority(
            super::PbSetRewardAuthorityBySuperAuthorityLayout,
        ),
        #[prost(message, tag = "26")]
        SetRewardEmissionsSuperAuthority(
            super::PbSetRewardEmissionsSuperAuthorityLayout,
        ),
        #[prost(message, tag = "27")]
        TwoHopSwap(super::PbTwoHopSwapLayout),
        #[prost(message, tag = "28")]
        InitializePositionBundle(super::PbInitializePositionBundleLayout),
        #[prost(message, tag = "29")]
        InitializePositionBundleWithMetadata(
            super::PbInitializePositionBundleWithMetadataLayout,
        ),
        #[prost(message, tag = "30")]
        DeletePositionBundle(super::PbDeletePositionBundleLayout),
        #[prost(message, tag = "31")]
        OpenBundledPosition(super::PbOpenBundledPositionLayout),
        #[prost(message, tag = "32")]
        CloseBundledPosition(super::PbCloseBundledPositionLayout),
        #[prost(message, tag = "33")]
        CollectFeesV2(super::PbCollectFeesV2Layout),
        #[prost(message, tag = "34")]
        CollectProtocolFeesV2(super::PbCollectProtocolFeesV2Layout),
        #[prost(message, tag = "35")]
        CollectRewardV2(super::PbCollectRewardV2Layout),
        #[prost(message, tag = "36")]
        DecreaseLiquidityV2(super::PbDecreaseLiquidityV2Layout),
        #[prost(message, tag = "37")]
        IncreaseLiquidityV2(super::PbIncreaseLiquidityV2Layout),
        #[prost(message, tag = "38")]
        InitializePoolV2(super::PbInitializePoolV2Layout),
        #[prost(message, tag = "39")]
        InitializeRewardV2(super::PbInitializeRewardV2Layout),
        #[prost(message, tag = "40")]
        SetRewardEmissionsV2(super::PbSetRewardEmissionsV2Layout),
        #[prost(message, tag = "41")]
        SwapV2(super::PbSwapV2Layout),
        #[prost(message, tag = "42")]
        TwoHopSwapV2(super::PbTwoHopSwapV2Layout),
        #[prost(message, tag = "43")]
        InitializeConfigExtension(super::PbInitializeConfigExtensionLayout),
        #[prost(message, tag = "44")]
        SetConfigExtensionAuthority(super::PbSetConfigExtensionAuthorityLayout),
        #[prost(message, tag = "45")]
        SetTokenBadgeAuthority(super::PbSetTokenBadgeAuthorityLayout),
        #[prost(message, tag = "46")]
        InitializeTokenBadge(super::PbInitializeTokenBadgeLayout),
        #[prost(message, tag = "47")]
        DeleteTokenBadge(super::PbDeleteTokenBadgeLayout),
        #[prost(message, tag = "48")]
        OpenPositionWithTokenExtensions(super::PbOpenPositionWithTokenExtensionsLayout),
        #[prost(message, tag = "49")]
        InitializeAccount(super::PbInitializeAccountLayout),
        /// Add other instruction args here as needed...
        #[prost(message, tag = "50")]
        IdlWrite(super::PbIdlWriteLayout),
    }
}
/// Contains the accounts involved in the instruction, identified by their role.
/// All fields are optional as not all instructions use all accounts.
/// Based on the keys found in `instructionTypeAccounts` in the Python code.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InputAccounts {
    /// Common accounts
    #[prost(string, optional, tag = "1")]
    pub funder: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "2")]
    pub owner: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "3")]
    pub system_program: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "4")]
    pub token_program: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "5")]
    pub rent: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "6")]
    pub associated_token_program: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "7")]
    pub position_authority: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "8")]
    pub position: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "9")]
    pub position_mint: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "10")]
    pub position_token_account: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "11")]
    pub whirlpool: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "12")]
    pub token_owner_account_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "13")]
    pub token_owner_account_b: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "14")]
    pub token_vault_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "15")]
    pub token_vault_b: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "16")]
    pub tick_array_lower: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "17")]
    pub tick_array_upper: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "18")]
    pub receiver: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "19")]
    pub token_authority: ::core::option::Option<::prost::alloc::string::String>,
    /// And oracleOne, oracleTwo for TwoHopSwap
    #[prost(string, optional, tag = "20")]
    pub oracle: ::core::option::Option<::prost::alloc::string::String>,
    /// Config related
    ///
    /// Renamed from whirlpools_config for brevity
    #[prost(string, optional, tag = "21")]
    pub config: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "22")]
    pub fee_authority: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "23")]
    pub collect_protocol_fees_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "24")]
    pub new_collect_protocol_fees_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "25")]
    pub new_fee_authority: ::core::option::Option<::prost::alloc::string::String>,
    /// Fee Tier related
    #[prost(string, optional, tag = "26")]
    pub fee_tier: ::core::option::Option<::prost::alloc::string::String>,
    /// Reward related
    #[prost(string, optional, tag = "27")]
    pub reward_authority: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "28")]
    pub reward_mint: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "29")]
    pub reward_vault: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "30")]
    pub new_reward_authority: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "31")]
    pub reward_emissions_super_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "32")]
    pub new_reward_emissions_super_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// From CollectReward
    #[prost(string, optional, tag = "33")]
    pub reward_owner_account: ::core::option::Option<::prost::alloc::string::String>,
    /// Pool specific
    #[prost(string, optional, tag = "34")]
    pub token_mint_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "35")]
    pub token_mint_b: ::core::option::Option<::prost::alloc::string::String>,
    /// From CollectProtocolFees
    #[prost(string, optional, tag = "36")]
    pub token_destination_a: ::core::option::Option<::prost::alloc::string::String>,
    /// From CollectProtocolFees
    #[prost(string, optional, tag = "37")]
    pub token_destination_b: ::core::option::Option<::prost::alloc::string::String>,
    /// Tick Array specific
    ///
    /// From InitializeTickArray
    #[prost(string, optional, tag = "38")]
    pub tick_array: ::core::option::Option<::prost::alloc::string::String>,
    /// From Swap
    #[prost(string, optional, tag = "39")]
    pub tick_array_0: ::core::option::Option<::prost::alloc::string::String>,
    /// From Swap
    #[prost(string, optional, tag = "40")]
    pub tick_array_1: ::core::option::Option<::prost::alloc::string::String>,
    /// From Swap
    #[prost(string, optional, tag = "41")]
    pub tick_array_2: ::core::option::Option<::prost::alloc::string::String>,
    /// OpenPositionWithMetadata specific
    #[prost(string, optional, tag = "42")]
    pub position_metadata_account: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "43")]
    pub metadata_program: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "44")]
    pub metadata_update_auth: ::core::option::Option<::prost::alloc::string::String>,
    /// Two Hop Swap specific
    #[prost(string, optional, tag = "45")]
    pub whirlpool_one: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "46")]
    pub whirlpool_two: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "47")]
    pub token_owner_account_one_a: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "48")]
    pub token_vault_one_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "49")]
    pub token_owner_account_one_b: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "50")]
    pub token_vault_one_b: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "51")]
    pub token_owner_account_two_a: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "52")]
    pub token_vault_two_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "53")]
    pub token_owner_account_two_b: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "54")]
    pub token_vault_two_b: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "55")]
    pub tick_array_one_0: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "56")]
    pub tick_array_one_1: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "57")]
    pub tick_array_one_2: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "58")]
    pub tick_array_two_0: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "59")]
    pub tick_array_two_1: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "60")]
    pub tick_array_two_2: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "61")]
    pub oracle_one: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "62")]
    pub oracle_two: ::core::option::Option<::prost::alloc::string::String>,
    /// Position Bundle related
    #[prost(string, optional, tag = "63")]
    pub position_bundle: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "64")]
    pub position_bundle_mint: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "65")]
    pub position_bundle_token_account: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "66")]
    pub position_bundle_owner: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "67")]
    pub position_bundle_metadata: ::core::option::Option<::prost::alloc::string::String>,
    /// From Open/Close BundledPosition
    #[prost(string, optional, tag = "68")]
    pub bundled_position: ::core::option::Option<::prost::alloc::string::String>,
    /// From Open/Close BundledPosition
    #[prost(string, optional, tag = "69")]
    pub position_bundle_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// V2 specific accounts
    #[prost(string, optional, tag = "70")]
    pub token_program_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "71")]
    pub token_program_b: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "72")]
    pub memo_program: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "73")]
    pub reward_token_program: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "74")]
    pub token_badge_a: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "75")]
    pub token_badge_b: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "76")]
    pub reward_token_badge: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "77")]
    pub token_mint_input: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "78")]
    pub token_mint_intermediate: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "79")]
    pub token_mint_output: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "80")]
    pub token_program_input: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "81")]
    pub token_program_intermediate: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "82")]
    pub token_program_output: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "83")]
    pub token_owner_account_input: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "84")]
    pub token_vault_one_input: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "85")]
    pub token_vault_one_intermediate: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "86")]
    pub token_vault_two_intermediate: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "87")]
    pub token_vault_two_output: ::core::option::Option<::prost::alloc::string::String>,
    /// TwoHopSwapV2
    #[prost(string, optional, tag = "88")]
    pub token_owner_account_output: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// Config Extension related
    ///
    /// Renamed from whirlpools_config_extension
    #[prost(string, optional, tag = "89")]
    pub config_extension: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "90")]
    pub config_extension_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    #[prost(string, optional, tag = "91")]
    pub new_config_extension_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// Token Badge related
    #[prost(string, optional, tag = "92")]
    pub token_badge_authority: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "93")]
    pub new_token_badge_authority: ::core::option::Option<
        ::prost::alloc::string::String,
    >,
    /// Used in Initialize/Delete TokenBadge
    #[prost(string, optional, tag = "94")]
    pub token_mint: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "95")]
    pub token_badge: ::core::option::Option<::prost::alloc::string::String>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Meta {
    /// YYYY-MM-DD
    #[prost(string, optional, tag = "1")]
    pub block_date: ::core::option::Option<::prost::alloc::string::String>,
    /// Unix timestamp (seconds)
    #[prost(int64, optional, tag = "2")]
    pub block_time: ::core::option::Option<i64>,
    #[prost(string, optional, tag = "3")]
    pub tx_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "4")]
    pub dapp: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(uint64, optional, tag = "5")]
    pub block_slot: ::core::option::Option<u64>,
    #[prost(uint32, optional, tag = "6")]
    pub instruction_index: ::core::option::Option<u32>,
    #[prost(bool, optional, tag = "7")]
    pub is_inner_instruction: ::core::option::Option<bool>,
    #[prost(uint32, optional, tag = "8")]
    pub inner_instruction_index: ::core::option::Option<u32>,
    #[prost(string, optional, tag = "9")]
    pub instruction_type: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(message, optional, tag = "10")]
    pub args: ::core::option::Option<FlatArg>,
    #[prost(message, optional, tag = "11")]
    pub input_accounts: ::core::option::Option<InputAccounts>,
    /// Add signer and outer_program, matching AMM structure (using snake_case)
    #[prost(string, optional, tag = "12")]
    pub signer: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "13")]
    pub outer_program: ::core::option::Option<::prost::alloc::string::String>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Output {
    #[prost(message, repeated, tag = "1")]
    pub data: ::prost::alloc::vec::Vec<Meta>,
}
/// Add dummy fields to potentially problematic empty messages
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbInitializeAccountLayout {
    #[prost(bool, optional, tag = "1")]
    pub dummy: ::core::option::Option<bool>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbIdlWriteLayout {
    #[prost(bool, optional, tag = "1")]
    pub dummy: ::core::option::Option<bool>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum PbAccountsType {
    TransferHookA = 0,
    TransferHookB = 1,
    TransferHookReward = 2,
    TransferHookInput = 3,
    TransferHookIntermediate = 4,
    TransferHookOutput = 5,
    SupplementalTickArrays = 6,
    SupplementalTickArraysOne = 7,
    SupplementalTickArraysTwo = 8,
}
impl PbAccountsType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::TransferHookA => "TRANSFER_HOOK_A",
            Self::TransferHookB => "TRANSFER_HOOK_B",
            Self::TransferHookReward => "TRANSFER_HOOK_REWARD",
            Self::TransferHookInput => "TRANSFER_HOOK_INPUT",
            Self::TransferHookIntermediate => "TRANSFER_HOOK_INTERMEDIATE",
            Self::TransferHookOutput => "TRANSFER_HOOK_OUTPUT",
            Self::SupplementalTickArrays => "SUPPLEMENTAL_TICK_ARRAYS",
            Self::SupplementalTickArraysOne => "SUPPLEMENTAL_TICK_ARRAYS_ONE",
            Self::SupplementalTickArraysTwo => "SUPPLEMENTAL_TICK_ARRAYS_TWO",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "TRANSFER_HOOK_A" => Some(Self::TransferHookA),
            "TRANSFER_HOOK_B" => Some(Self::TransferHookB),
            "TRANSFER_HOOK_REWARD" => Some(Self::TransferHookReward),
            "TRANSFER_HOOK_INPUT" => Some(Self::TransferHookInput),
            "TRANSFER_HOOK_INTERMEDIATE" => Some(Self::TransferHookIntermediate),
            "TRANSFER_HOOK_OUTPUT" => Some(Self::TransferHookOutput),
            "SUPPLEMENTAL_TICK_ARRAYS" => Some(Self::SupplementalTickArrays),
            "SUPPLEMENTAL_TICK_ARRAYS_ONE" => Some(Self::SupplementalTickArraysOne),
            "SUPPLEMENTAL_TICK_ARRAYS_TWO" => Some(Self::SupplementalTickArraysTwo),
            _ => None,
        }
    }
}
