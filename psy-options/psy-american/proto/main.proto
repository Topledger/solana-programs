syntax = "proto2";

package sf.solana.block_meta.v1;

message PbInitializeMarketLayout {
  required uint64 underlyingAmountPerContract = 1;
  required uint64 quoteAmountPerContract = 2;
  required double expirationUnixTimestamp = 3;
  required uint32 bumpSeed = 4;
}

message PbMintOptionLayout {
  required uint64 size = 1;
}

message PbMintOptionV2Layout {
  required uint64 size = 1;
}

message PbExerciseOptionLayout {
  required uint64 size = 1;
}

message PbExerciseOptionV2Layout {
  required uint64 size = 1;
}

message PbClosePostExpirationLayout {
  required uint64 size = 1;
}

message PbCloseOptionPositionLayout {
  required uint64 size = 1;
}

message PbBurnWriterForQuoteLayout {
  required uint64 size = 1;
}

message PbInitSerumMarketLayout {
  required uint64 marketSpace = 1;
  required uint64 vaultSignerNonce = 2;
  required uint64 coinLotSize = 3;
  required uint64 pcLotSize = 4;
  required uint64 pcDustThreshold = 5;
}

message Arg {
  required string instruction_type = 1;
  optional PbInitializeMarketLayout initializeMarket = 2;
  optional PbMintOptionLayout mintOption = 3;
  optional PbMintOptionV2Layout mintOptionV2 = 4;
  optional PbExerciseOptionLayout exerciseOption = 5;
  optional PbExerciseOptionV2Layout exerciseOptionV2 = 6;
  optional PbClosePostExpirationLayout closePostExpiration = 7;
  optional PbCloseOptionPositionLayout closeOptionPosition = 8;
  optional PbBurnWriterForQuoteLayout burnWriterForQuote = 9;
  optional PbInitSerumMarketLayout initSerumMarket = 10;
}

message InputAccounts {
  optional string authority = 1;
  optional string underlyingAssetMint = 2;
  optional string quoteAssetMint = 3;
  optional string optionMint = 4;
  optional string writerTokenMint = 5;
  optional string quoteAssetPool = 6;
  optional string underlyingAssetPool = 7;
  optional string optionMarket = 8;
  optional string feeOwner = 9;
  optional string tokenProgram = 10;
  optional string associatedTokenProgram = 11;
  optional string rent = 12;
  optional string systemProgram = 13;
  optional string clock = 14;
  optional string userAuthority = 15;
  optional string underlyingAssetSrc = 16;
  optional string mintedOptionDest = 17;
  optional string mintedWriterTokenDest = 18;
  optional string optionAuthority = 19;
  optional string exerciserOptionTokenSrc = 20;
  optional string underlyingAssetDest = 21;
  optional string quoteAssetSrc = 22;
  optional string writerTokenSrc = 23;
  optional string optionTokenMint = 24;
  optional string optionTokenSrc = 25;
  optional string writerQuoteDest = 26;
  optional string serumMarket = 27;
  optional string dexProgram = 28;
  optional string pcMint = 29;
  optional string requestQueue = 30;
  optional string eventQueue = 31;
  optional string bids = 32;
  optional string asks = 33;
  optional string coinVault = 34;
  optional string pcVault = 35;
  optional string vaultSigner = 36;
  optional string marketAuthority = 37;
}

message Meta {
  required string block_date = 1;
  required int64 block_time = 2;
  required string tx_id = 3;
  required string dapp = 4;
  required uint64 block_slot = 5;
  required uint32 instruction_index = 7;
  required bool is_inner_instruction = 8;
  required uint32 inner_instruction_index = 9;
  required string instruction_type = 10;
  required Arg args = 11;
  required InputAccounts input_accounts = 12;
}

message Output {
  repeated Meta data = 1;
}