// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Instructions {
    #[prost(message, repeated, tag = "1")]
    pub instructions: ::prost::alloc::vec::Vec<Meta>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Meta {
    #[prost(string, tag = "1")]
    pub block_date: ::prost::alloc::string::String,
    #[prost(int64, tag = "2")]
    pub block_time: i64,
    #[prost(uint64, tag = "3")]
    pub block_slot: u64,
    #[prost(string, tag = "4")]
    pub tx_id: ::prost::alloc::string::String,
    #[prost(uint32, optional, tag = "5")]
    pub instruction_index: ::core::option::Option<u32>,
    #[prost(bool, optional, tag = "6")]
    pub is_inner_instruction: ::core::option::Option<bool>,
    #[prost(uint32, optional, tag = "7")]
    pub inner_instruction_index: ::core::option::Option<u32>,
    #[prost(string, tag = "8")]
    pub dapp: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub instruction_type: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "10")]
    pub args: ::core::option::Option<FlatArg>,
    #[prost(map = "string, string", tag = "11")]
    pub input_accounts: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        ::prost::alloc::string::String,
    >,
    #[prost(string, tag = "12")]
    pub signer: ::prost::alloc::string::String,
    #[prost(string, tag = "13")]
    pub outer_program: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FlatArg {
    #[prost(uint32, optional, tag = "1")]
    pub index: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "2")]
    pub tick_spacing: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "3")]
    pub trade_fee_rate: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "4")]
    pub protocol_fee_rate: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "5")]
    pub fund_fee_rate: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "6")]
    pub param: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "7")]
    pub value: ::core::option::Option<u32>,
    #[prost(message, optional, tag = "8")]
    pub sqrt_price_x64: ::core::option::Option<PbInt128>,
    #[prost(int64, optional, tag = "9")]
    pub open_time: ::core::option::Option<i64>,
    #[prost(uint32, optional, tag = "10")]
    pub status: ::core::option::Option<u32>,
    #[prost(message, repeated, tag = "11")]
    pub keys: ::prost::alloc::vec::Vec<PbPubKey>,
    #[prost(message, optional, tag = "12")]
    pub new_owner: ::core::option::Option<PbPubKey>,
    #[prost(message, optional, tag = "13")]
    pub params: ::core::option::Option<PbInitializeRewardParam>,
    #[prost(uint32, optional, tag = "14")]
    pub reward_index: ::core::option::Option<u32>,
    #[prost(message, optional, tag = "15")]
    pub emissions_per_second_x64: ::core::option::Option<PbInt128>,
    #[prost(int64, optional, tag = "16")]
    pub end_time: ::core::option::Option<i64>,
    #[prost(string, optional, tag = "17")]
    pub amount0_requested: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(string, optional, tag = "18")]
    pub amount1_requested: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(int32, optional, tag = "19")]
    pub tick_lower_index: ::core::option::Option<i32>,
    #[prost(int32, optional, tag = "20")]
    pub tick_upper_index: ::core::option::Option<i32>,
    #[prost(int32, optional, tag = "21")]
    pub tick_array_lower_start_index: ::core::option::Option<i32>,
    #[prost(int32, optional, tag = "22")]
    pub tick_array_upper_start_index: ::core::option::Option<i32>,
    #[prost(message, optional, tag = "23")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, optional, tag = "24")]
    pub amount0_max: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "25")]
    pub amount1_max: ::core::option::Option<i64>,
    #[prost(bool, optional, tag = "26")]
    pub with_metadata: ::core::option::Option<bool>,
    #[prost(bool, optional, tag = "27")]
    pub base_flag: ::core::option::Option<bool>,
    #[prost(int64, optional, tag = "28")]
    pub amount0_min: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "29")]
    pub amount1_min: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "30")]
    pub amount: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "31")]
    pub other_amount_threshold: ::core::option::Option<i64>,
    #[prost(message, optional, tag = "32")]
    pub sqrt_price_limit_x64: ::core::option::Option<PbInt128>,
    #[prost(bool, optional, tag = "33")]
    pub is_base_input: ::core::option::Option<bool>,
    #[prost(int64, optional, tag = "34")]
    pub amount_in: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "35")]
    pub amount_out_minimum: ::core::option::Option<i64>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InputAccounts {
    #[prost(message, optional, tag = "1")]
    pub owner: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "2")]
    pub amm_config: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "3")]
    pub system_program: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "4")]
    pub pool_creator: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "5")]
    pub pool_state: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "6")]
    pub token_mint0: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "7")]
    pub token_mint1: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "8")]
    pub token_vault0: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "9")]
    pub token_vault1: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "10")]
    pub observation_state: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "11")]
    pub tick_array_bitmap: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "12")]
    pub token_program0: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "13")]
    pub token_program1: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "14")]
    pub rent: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "15")]
    pub authority: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "16")]
    pub operation_state: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "17")]
    pub reward_funder: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "18")]
    pub funder_token_account: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "19")]
    pub reward_token_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "20")]
    pub reward_token_vault: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "21")]
    pub reward_token_program: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "22")]
    pub reward_vault_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "23")]
    pub token_program: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "24")]
    pub token_program2022: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "25")]
    pub memo_program: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "26")]
    pub vault0_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "27")]
    pub vault1_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "28")]
    pub recipient_token_account0: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "29")]
    pub recipient_token_account1: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "30")]
    pub payer: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "31")]
    pub position_nft_owner: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "32")]
    pub position_nft_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "33")]
    pub position_nft_account: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "34")]
    pub metadata_account: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "35")]
    pub protocol_position: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "36")]
    pub tick_array_lower: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "37")]
    pub tick_array_upper: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "38")]
    pub personal_position: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "39")]
    pub token_account0: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "40")]
    pub token_account1: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "41")]
    pub associated_token_program: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "42")]
    pub metadata_program: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "43")]
    pub nft_owner: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "44")]
    pub nft_account: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "45")]
    pub input_token_account: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "46")]
    pub output_token_account: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "47")]
    pub input_vault: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "48")]
    pub output_vault: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "49")]
    pub tick_array: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "50")]
    pub input_token_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "51")]
    pub input_vault_mint: ::core::option::Option<InputAccount>,
    #[prost(message, optional, tag = "52")]
    pub output_vault_mint: ::core::option::Option<InputAccount>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InputAccount {
    #[prost(string, tag = "1")]
    pub address: ::prost::alloc::string::String,
    #[prost(bool, tag = "2")]
    pub is_signer: bool,
    #[prost(bool, tag = "3")]
    pub is_writable: bool,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbPubKey {
    /// 32 bytes
    #[prost(bytes = "vec", tag = "1")]
    pub value: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbInt128 {
    /// Representing u128 as string
    #[prost(string, tag = "1")]
    pub value: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCreateAmmConfigLayout {
    #[prost(uint32, tag = "1")]
    pub index: u32,
    #[prost(uint32, tag = "2")]
    pub tick_spacing: u32,
    #[prost(uint32, tag = "3")]
    pub trade_fee_rate: u32,
    #[prost(uint32, tag = "4")]
    pub protocol_fee_rate: u32,
    #[prost(uint32, tag = "5")]
    pub fund_fee_rate: u32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbUpdateAmmConfigLayout {
    #[prost(uint32, tag = "1")]
    pub param: u32,
    #[prost(uint32, tag = "2")]
    pub value: u32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbCreatePoolLayout {
    #[prost(message, optional, tag = "1")]
    pub sqrt_price_x64: ::core::option::Option<PbInt128>,
    #[prost(int64, optional, tag = "2")]
    pub open_time: ::core::option::Option<i64>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbUpdatePoolStatusLayout {
    #[prost(uint32, tag = "1")]
    pub status: u32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCreateOperationAccountLayout {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbUpdateOperationAccountLayout {
    #[prost(uint32, tag = "1")]
    pub param: u32,
    #[prost(message, repeated, tag = "2")]
    pub keys: ::prost::alloc::vec::Vec<PbPubKey>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbTransferRewardOwnerLayout {
    #[prost(message, optional, tag = "1")]
    pub new_owner: ::core::option::Option<PbPubKey>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbInitializeRewardParam {
    #[prost(int64, tag = "1")]
    pub open_time: i64,
    #[prost(int64, tag = "2")]
    pub end_time: i64,
    #[prost(message, optional, tag = "3")]
    pub emissions_per_second_x64: ::core::option::Option<PbInt128>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbInitializeRewardLayout {
    #[prost(message, optional, tag = "1")]
    pub params: ::core::option::Option<PbInitializeRewardParam>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCollectRemainingRewardsLayout {
    #[prost(uint32, tag = "1")]
    pub reward_index: u32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbUpdateRewardInfosLayout {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSetRewardParamsLayout {
    #[prost(uint32, tag = "1")]
    pub reward_index: u32,
    #[prost(message, optional, tag = "2")]
    pub emissions_per_second_x64: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "3")]
    pub open_time: i64,
    #[prost(int64, tag = "4")]
    pub end_time: i64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCollectProtocolFeeLayout {
    #[prost(uint64, tag = "1")]
    pub amount0_requested: u64,
    #[prost(uint64, tag = "2")]
    pub amount1_requested: u64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbCollectFundFeeLayout {
    #[prost(uint64, tag = "1")]
    pub amount0_requested: u64,
    #[prost(uint64, tag = "2")]
    pub amount1_requested: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbOpenPositionLayout {
    #[prost(int32, tag = "1")]
    pub tick_lower_index: i32,
    #[prost(int32, tag = "2")]
    pub tick_upper_index: i32,
    #[prost(int32, tag = "3")]
    pub tick_array_lower_start_index: i32,
    #[prost(int32, tag = "4")]
    pub tick_array_upper_start_index: i32,
    #[prost(message, optional, tag = "5")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "6")]
    pub amount0_max: i64,
    #[prost(int64, tag = "7")]
    pub amount1_max: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbOpenPositionV2Layout {
    #[prost(int32, tag = "1")]
    pub tick_lower_index: i32,
    #[prost(int32, tag = "2")]
    pub tick_upper_index: i32,
    #[prost(int32, tag = "3")]
    pub tick_array_lower_start_index: i32,
    #[prost(int32, tag = "4")]
    pub tick_array_upper_start_index: i32,
    #[prost(message, optional, tag = "5")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "6")]
    pub amount0_max: i64,
    #[prost(int64, tag = "7")]
    pub amount1_max: i64,
    #[prost(bool, tag = "8")]
    pub with_metadata: bool,
    #[prost(bool, optional, tag = "9")]
    pub base_flag: ::core::option::Option<bool>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbOpenPositionWithToken22NftLayout {
    #[prost(int32, tag = "1")]
    pub tick_lower_index: i32,
    #[prost(int32, tag = "2")]
    pub tick_upper_index: i32,
    #[prost(int32, tag = "3")]
    pub tick_array_lower_start_index: i32,
    #[prost(int32, tag = "4")]
    pub tick_array_upper_start_index: i32,
    #[prost(message, optional, tag = "5")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "6")]
    pub amount0_max: i64,
    #[prost(int64, tag = "7")]
    pub amount1_max: i64,
    #[prost(bool, tag = "8")]
    pub with_metadata: bool,
    #[prost(bool, optional, tag = "9")]
    pub base_flag: ::core::option::Option<bool>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbClosePositionLayout {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbIncreaseLiquidityLayout {
    #[prost(message, optional, tag = "1")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "2")]
    pub amount0_max: i64,
    #[prost(int64, tag = "3")]
    pub amount1_max: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbIncreaseLiquidityV2Layout {
    #[prost(message, optional, tag = "1")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "2")]
    pub amount0_max: i64,
    #[prost(int64, tag = "3")]
    pub amount1_max: i64,
    #[prost(bool, optional, tag = "4")]
    pub base_flag: ::core::option::Option<bool>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbDecreaseLiquidityLayout {
    #[prost(message, optional, tag = "1")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "2")]
    pub amount0_min: i64,
    #[prost(int64, tag = "3")]
    pub amount1_min: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbDecreaseLiquidityV2Layout {
    #[prost(message, optional, tag = "1")]
    pub liquidity: ::core::option::Option<PbInt128>,
    #[prost(int64, tag = "2")]
    pub amount0_min: i64,
    #[prost(int64, tag = "3")]
    pub amount1_min: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSwapLayout {
    #[prost(int64, tag = "1")]
    pub amount: i64,
    #[prost(int64, tag = "2")]
    pub other_amount_threshold: i64,
    #[prost(message, optional, tag = "3")]
    pub sqrt_price_limit_x64: ::core::option::Option<PbInt128>,
    #[prost(bool, tag = "4")]
    pub is_base_input: bool,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PbSwapV2Layout {
    #[prost(int64, tag = "1")]
    pub amount: i64,
    #[prost(int64, tag = "2")]
    pub other_amount_threshold: i64,
    #[prost(message, optional, tag = "3")]
    pub sqrt_price_limit_x64: ::core::option::Option<PbInt128>,
    #[prost(bool, tag = "4")]
    pub is_base_input: bool,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbSwapRouterBaseInLayout {
    #[prost(int64, tag = "1")]
    pub amount_in: i64,
    #[prost(int64, tag = "2")]
    pub amount_out_minimum: i64,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DefaultInstructionLayout {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InstructionArgs {
    #[prost(
        oneof = "instruction_args::InstructionArgs",
        tags = "1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25"
    )]
    pub instruction_args: ::core::option::Option<instruction_args::InstructionArgs>,
}
/// Nested message and enum types in `InstructionArgs`.
pub mod instruction_args {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum InstructionArgs {
        #[prost(message, tag = "1")]
        CreateAmmConfig(super::PbCreateAmmConfigLayout),
        #[prost(message, tag = "2")]
        UpdateAmmConfig(super::PbUpdateAmmConfigLayout),
        #[prost(message, tag = "3")]
        CreatePool(super::PbCreatePoolLayout),
        #[prost(message, tag = "4")]
        UpdatePoolStatus(super::PbUpdatePoolStatusLayout),
        #[prost(message, tag = "5")]
        CreateOperationAccount(super::PbCreateOperationAccountLayout),
        #[prost(message, tag = "6")]
        UpdateOperationAccount(super::PbUpdateOperationAccountLayout),
        #[prost(message, tag = "7")]
        TransferRewardOwner(super::PbTransferRewardOwnerLayout),
        #[prost(message, tag = "8")]
        InitializeReward(super::PbInitializeRewardLayout),
        #[prost(message, tag = "9")]
        CollectRemainingRewards(super::PbCollectRemainingRewardsLayout),
        #[prost(message, tag = "10")]
        UpdateRewardInfos(super::PbUpdateRewardInfosLayout),
        #[prost(message, tag = "11")]
        SetRewardParams(super::PbSetRewardParamsLayout),
        #[prost(message, tag = "12")]
        CollectProtocolFee(super::PbCollectProtocolFeeLayout),
        #[prost(message, tag = "13")]
        CollectFundFee(super::PbCollectFundFeeLayout),
        #[prost(message, tag = "14")]
        OpenPosition(super::PbOpenPositionLayout),
        #[prost(message, tag = "15")]
        OpenPositionV2(super::PbOpenPositionV2Layout),
        #[prost(message, tag = "16")]
        OpenPositionWithToken22Nft(super::PbOpenPositionWithToken22NftLayout),
        #[prost(message, tag = "17")]
        ClosePosition(super::PbClosePositionLayout),
        #[prost(message, tag = "18")]
        IncreaseLiquidity(super::PbIncreaseLiquidityLayout),
        #[prost(message, tag = "19")]
        IncreaseLiquidityV2(super::PbIncreaseLiquidityV2Layout),
        #[prost(message, tag = "20")]
        DecreaseLiquidity(super::PbDecreaseLiquidityLayout),
        #[prost(message, tag = "21")]
        DecreaseLiquidityV2(super::PbDecreaseLiquidityV2Layout),
        #[prost(message, tag = "22")]
        Swap(super::PbSwapLayout),
        #[prost(message, tag = "23")]
        SwapV2(super::PbSwapV2Layout),
        #[prost(message, tag = "24")]
        SwapRouterBaseIn(super::PbSwapRouterBaseInLayout),
        /// Placeholder for unknown/unhandled
        #[prost(message, tag = "25")]
        DefaultInstruction(super::DefaultInstructionLayout),
    }
}
